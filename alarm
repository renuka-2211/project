from tkinter import *
import datetime
import time
import winsound
 
def Alarm(set_alarm_timer):
    while True:
        time.sleep(1)
        actual_time = datetime.datetime.now()
        cur_time = actual_time.strftime("%H:%M:%S")
        cur_date = actual_time.strftime("%d/%m/%Y")
        msg="Current Time: "+str(cur_time)
        print(msg)
        if cur_time == set_alarm_timer:
            winsound.PlaySound("Music.wav",winsound.SND_ASYNC)
            break
 
def get_alarm_time():
    alarm_set_time = f"{hour.get()}:{min.get()}:{sec.get()}"
    Alarm(alarm_set_time)
 
window = Tk()
window.title("Alarm Clock")
window.geometry("400x160")
window.config(bg="#922B21")
window.resizable(width=False,height=False)
 
time_format=Label(window, text= "Remember to set time in 24 hour format!", fg="white",bg="#922B21",font=("Arial",15)).place(x=20,y=120)
addTime = Label(window,text = "Hour     Min     Sec",font=60,fg="white",bg="black").place(x = 210)
setYourAlarm = Label(window,text = "Set Time for Alarm: ",fg="white",bg="#922B21",relief = "solid",font=("Helevetica",15,"bold")).place(x=10, y=40)
 
hour = StringVar()
min = StringVar()
sec = StringVar()
 
hourTime= Entry(window,textvariable = hour,bg = "#48C9B0",width = 4,font=(20)).place(x=210,y=40)
minTime= Entry(window,textvariable = min,bg = "#48C9B0",width = 4,font=(20)).place(x=270,y=40)
secTime = Entry(window,textvariable = sec,bg = "#48C9B0",width = 4,font=(20)).place(x=330,y=40)
 
submit = Button(window,text = "Set Your Alarm",fg="Black",bg="#D4AC0D",width = 15,command = get_alarm_time,font=(20)).place(x =100,y=80)
 
window.mainloop()  


#Number guessing game
import random

def play_guessing_game():
    target_number = random.randint(1, 100)
    attempts = 0

    print("Welcome to the Number Guessing Game!")
    print("I've picked a number between 1 and 100. Can you guess it?")

    while True:
        try:
            user_guess = int(input("Enter your guess: "))
            attempts += 1

            if user_guess == target_number:
                print(f"Congratulations! You guessed it right in {attempts} attempts.")
                break
            elif user_guess < target_number:
                print("Try a higher number.")
            else:
                print("Try a lower number.")
        except ValueError:
            print("Please enter a valid number.")

if __name__ == "__main__":
    play_guessing_game()








import requests
from tkinter import *
from tkinter import ttk

class RealTimeCurrencyConverter:
    def __init__(self, url):
        self.data = requests.get(url).json()
        self.currencies = self.data['rates']

    def convert(self, from_currency, to_currency, amount):
        initial_amount = amount
        if from_currency != 'USD':
            amount = amount / self.currencies[from_currency]
        amount = round(amount * self.currencies[to_currency], 4)
        return amount

def main():
    url = 'https://api.exchangerate-api.com/v4/latest/USD'
    converter = RealTimeCurrencyConverter(url)

    def perform_conversion():
        from_currency = from_currency_var.get()
        to_currency = to_currency_var.get()
        amount = float(amount_entry.get())
        converted_amount = converter.convert(from_currency, to_currency, amount)
        result_label.config(text=f'{amount} {from_currency} = {converted_amount} {to_currency}')

    root = Tk()
    root.title('Currency Converter')

    from_currency_var = StringVar(root)
    to_currency_var = StringVar(root)
    from_currency_var.set('USD')
    to_currency_var.set('INR')

    amount_label = Label(root, text='Amount:')
    amount_label.grid(row=0, column=0, padx=10, pady=10)
    amount_entry = Entry(root)
    amount_entry.grid(row=0, column=1, padx=10, pady=10)

    from_currency_label = Label(root, text='From Currency:')
    from_currency_label.grid(row=1, column=0, padx=10, pady=10)
    from_currency_menu = ttk.Combobox(root, textvariable=from_currency_var, values=list(converter.currencies.keys()))
    from_currency_menu.grid(row=1, column=1, padx=10, pady=10)

    to_currency_label = Label(root, text='To Currency:')
    to_currency_label.grid(row=2, column=0, padx=10, pady=10)
    to_currency_menu = ttk.Combobox(root, textvariable=to_currency_var, values=list(converter.currencies.keys()))
    to_currency_menu.grid(row=2, column=1, padx=10, pady=10)

    convert_button = Button(root, text='Convert', command=perform_conversion)
    convert_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

    result_label = Label(root, text='')
    result_label.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

    root.mainloop()

if __name__ == '__main__':
    main()










import string
import random

# Getting password length
length = int(input("Enter password length: "))

print('''Choose character set for password from these : 
		1. Digits
		2. Letters
		3. Special characters
		4. Exit''')

characterList = ""

# Getting character set for password
while(True):
	choice = int(input("Pick a number "))
	if(choice == 1):
		
		# Adding letters to possible characters
		characterList += string.ascii_letters
	elif(choice == 2):
		
		# Adding digits to possible characters
		characterList += string.digits
	elif(choice == 3):
		
		# Adding special characters to possible
		# characters
		characterList += string.punctuation
	elif(choice == 4):
		break
	else:
		print("Please pick a valid option!")

password = []

for i in range(length):

	# Picking a random character from our 
	# character list
	randomchar = random.choice(characterList)
	
	# appending a random character to password
	password.append(randomchar)

# printing password as a string
print("The random password is " + "".join(password))

