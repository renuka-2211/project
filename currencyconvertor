import requests
from tkinter import *
from tkinter import ttk

class RealTimeCurrencyConverter:
    def __init__(self, url):
        self.data = requests.get(url).json()
        self.currencies = self.data['rates']

    def convert(self, from_currency, to_currency, amount):
        initial_amount = amount
        if from_currency != 'USD':
            amount = amount / self.currencies[from_currency]
        amount = round(amount * self.currencies[to_currency], 4)
        return amount

def main():
    url = 'https://api.exchangerate-api.com/v4/latest/USD'
    converter = RealTimeCurrencyConverter(url)

    def perform_conversion():
        from_currency = from_currency_var.get()
        to_currency = to_currency_var.get()
        amount = float(amount_entry.get())
        converted_amount = converter.convert(from_currency, to_currency, amount)
        result_label.config(text=f'{amount} {from_currency} = {converted_amount} {to_currency}')

    root = Tk()
    root.title('Currency Converter')

    from_currency_var = StringVar(root)
    to_currency_var = StringVar(root)
    from_currency_var.set('USD')
    to_currency_var.set('INR')

    amount_label = Label(root, text='Amount:')
    amount_label.grid(row=0, column=0, padx=10, pady=10)
    amount_entry = Entry(root)
    amount_entry.grid(row=0, column=1, padx=10, pady=10)

    from_currency_label = Label(root, text='From Currency:')
    from_currency_label.grid(row=1, column=0, padx=10, pady=10)
    from_currency_menu = ttk.Combobox(root, textvariable=from_currency_var, values=list(converter.currencies.keys()))
    from_currency_menu.grid(row=1, column=1, padx=10, pady=10)

    to_currency_label = Label(root, text='To Currency:')
    to_currency_label.grid(row=2, column=0, padx=10, pady=10)
    to_currency_menu = ttk.Combobox(root, textvariable=to_currency_var, values=list(converter.currencies.keys()))
    to_currency_menu.grid(row=2, column=1, padx=10, pady=10)

    convert_button = Button(root, text='Convert', command=perform_conversion)
    convert_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

    result_label = Label(root, text='')
    result_label.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

    root.mainloop()

if __name__ == '__main__':
    main()

